// Generated by Dagger (https://dagger.dev).
package com.example.itworkxnews.di;

import com.example.itworkxnews.presentation.adapters.NewsRecyclerViewAdapter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AdapterModule_ProvideNewsRecyclerViewAdapterFactory implements Factory<NewsRecyclerViewAdapter> {
  private final AdapterModule module;

  public AdapterModule_ProvideNewsRecyclerViewAdapterFactory(AdapterModule module) {
    this.module = module;
  }

  @Override
  public NewsRecyclerViewAdapter get() {
    return provideNewsRecyclerViewAdapter(module);
  }

  public static AdapterModule_ProvideNewsRecyclerViewAdapterFactory create(AdapterModule module) {
    return new AdapterModule_ProvideNewsRecyclerViewAdapterFactory(module);
  }

  public static NewsRecyclerViewAdapter provideNewsRecyclerViewAdapter(AdapterModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideNewsRecyclerViewAdapter());
  }
}
