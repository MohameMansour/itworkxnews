// Generated by Dagger (https://dagger.dev).
package com.example.itworkxnews.di;

import com.example.itworkxnews.data.db.ArticleDAO;
import com.example.itworkxnews.data.local.data_source.NewsLocalDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class LocaleDataModule_ProvideLocaleDataSourceFactory implements Factory<NewsLocalDataSource> {
  private final LocaleDataModule module;

  private final Provider<ArticleDAO> articleDaoProvider;

  public LocaleDataModule_ProvideLocaleDataSourceFactory(LocaleDataModule module,
      Provider<ArticleDAO> articleDaoProvider) {
    this.module = module;
    this.articleDaoProvider = articleDaoProvider;
  }

  @Override
  public NewsLocalDataSource get() {
    return provideLocaleDataSource(module, articleDaoProvider.get());
  }

  public static LocaleDataModule_ProvideLocaleDataSourceFactory create(LocaleDataModule module,
      Provider<ArticleDAO> articleDaoProvider) {
    return new LocaleDataModule_ProvideLocaleDataSourceFactory(module, articleDaoProvider);
  }

  public static NewsLocalDataSource provideLocaleDataSource(LocaleDataModule instance,
      ArticleDAO articleDao) {
    return Preconditions.checkNotNullFromProvides(instance.provideLocaleDataSource(articleDao));
  }
}
