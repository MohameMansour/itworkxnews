// Generated by Dagger (https://dagger.dev).
package com.example.itworkxnews.presentation.viewmodels;

import com.example.itworkxnews.domain.usecase.NewsUseCases;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NewDetailViewModel_Factory implements Factory<NewDetailViewModel> {
  private final Provider<NewsUseCases> newsUseCasesProvider;

  public NewDetailViewModel_Factory(Provider<NewsUseCases> newsUseCasesProvider) {
    this.newsUseCasesProvider = newsUseCasesProvider;
  }

  @Override
  public NewDetailViewModel get() {
    return newInstance(newsUseCasesProvider.get());
  }

  public static NewDetailViewModel_Factory create(Provider<NewsUseCases> newsUseCasesProvider) {
    return new NewDetailViewModel_Factory(newsUseCasesProvider);
  }

  public static NewDetailViewModel newInstance(NewsUseCases newsUseCases) {
    return new NewDetailViewModel(newsUseCases);
  }
}
