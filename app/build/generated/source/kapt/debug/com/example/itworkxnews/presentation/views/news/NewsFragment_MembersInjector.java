// Generated by Dagger (https://dagger.dev).
package com.example.itworkxnews.presentation.views.news;

import com.example.itworkxnews.presentation.adapters.NewsPagingDataAdapter;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NewsFragment_MembersInjector implements MembersInjector<NewsFragment> {
  private final Provider<NewsPagingDataAdapter> newsPagingDataAdapterProvider;

  public NewsFragment_MembersInjector(
      Provider<NewsPagingDataAdapter> newsPagingDataAdapterProvider) {
    this.newsPagingDataAdapterProvider = newsPagingDataAdapterProvider;
  }

  public static MembersInjector<NewsFragment> create(
      Provider<NewsPagingDataAdapter> newsPagingDataAdapterProvider) {
    return new NewsFragment_MembersInjector(newsPagingDataAdapterProvider);
  }

  @Override
  public void injectMembers(NewsFragment instance) {
    injectNewsPagingDataAdapter(instance, newsPagingDataAdapterProvider.get());
  }

  @InjectedFieldSignature("com.example.itworkxnews.presentation.views.news.NewsFragment.newsPagingDataAdapter")
  public static void injectNewsPagingDataAdapter(NewsFragment instance,
      NewsPagingDataAdapter newsPagingDataAdapter) {
    instance.newsPagingDataAdapter = newsPagingDataAdapter;
  }
}
